<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="1" hostname="a79dd6c7f026" name="pytest" skipped="0" tests="5" time="0.630" timestamp="2020-08-30T17:10:30.842051"><testcase classname="tests.test_control_junit" file="tests/test_control_junit.py" line="15" name="test_junit_parser_control_passes_WHEN_no_failures_AND_no_errors" time="0.008"></testcase><testcase classname="tests.test_control_junit" file="tests/test_control_junit.py" line="35" name="test_junit_parser_control_fails_WHEN_failures" time="0.006"></testcase><testcase classname="tests.test_control_junit" file="tests/test_control_junit.py" line="56" name="test_junit_parser_control_fails_WHEN_errors" time="0.007"></testcase><testcase classname="tests.test_control_junit" file="tests/test_control_junit.py" line="77" name="test_junit_parser_can_load_and_parse_junit_output" time="0.004"></testcase><testcase classname="tests.test_control_junit" file="tests/test_control_junit.py" line="90" name="test_junit_parser_can_load_and_parse_pytest_output" time="0.007"><failure message="assert True is False">def test_junit_parser_can_load_and_parse_pytest_output():
        test_xml = JUnitXml.fromfile(&apos;tests/TEST-Pytest_example.xml&apos;)
        # one test suite in file
        assert test_xml._tag == &quot;testsuites&quot;
        assert len(test_xml) == 1
        assert test_xml.failures == 0
        assert test_xml.errors == 0
    
        (control_result, message) = control_junit(test_xml)
&gt;       assert control_result is False
E       assert True is False

tests/test_control_junit.py:100: AssertionError</failure></testcase></testsuite></testsuites>